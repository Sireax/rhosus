syntax = "proto3";

package api_pb;
option go_package = "github.com/parasource/rhosus/rhosus/pb/api_pb";

service Api {
  rpc Ping (Void) returns (Void);
  rpc MakeDir (MakeDirRequest) returns (CommonResponse);
  rpc Remove (RemoveRequest) returns (CommonResponse);
  rpc List (ListRequest) returns (ListResponse);
  rpc Upload (stream UploadRequest) returns (UploadResponse);
  rpc Download (DownloadRequest) returns (stream DownloadResponse);
}

enum Method {
  POST = 0;
  PUT = 2;
  GET = 3;
  DELETE = 4;
}

message Void {}

message CommonResponse {
  bool success = 1;
  string err = 2;
  map<string, string> args = 3;
}

message MakeDirRequest {
  string path = 1;
}

message RemoveRequest {
  string path = 1;
  bool recursive = 2;
}

message ListRequest {
  string path = 1;
}

message FileInfo {
  string name = 1;
  enum Type {
    FILE = 0;
    DIR = 1;
    SYM = 2;
  }
  Type type = 2;
  uint64 file_size = 3;
}

message ListResponse {
  repeated FileInfo list = 1;
  string error = 2;
}

message UploadRequest {
  message Header {

  }
  Header header = 1;
  bytes data = 2;
}

message UploadResponse {

}

message DownloadRequest {

}

message DownloadResponse {

}

// Auth

message LoginRequest {
  string method = 1;
  map<string, string> data = 2;
}

message LoginResponse {
  string token = 1;
  bool Success = 2;
  string Message = 3;
}


// <---------------------->
//        Policies
// <---------------------->

message Policy {
  string id = 1;
  string name = 2;
  repeated PolicyPathRules paths = 3;
}

message PolicyPathRules {
  string path = 1;
  repeated string capabilities = 2;
}

message CreatePolicyRequest {
  string name = 1;
  repeated PolicyPathRules paths = 2;
}
message CreatePolicyResponse {}


message GetPolicyRequest {
  string name = 1;
}
message GetPolicyResponse {
  string name = 1;
  repeated PolicyPathRules paths = 2;
}

message ListPoliciesRequest {}
message ListPoliciesResponse {
  repeated Policy policies = 1;
}

message DeletePolicyRequest {
  string name = 1;
}

message DeletePolicyResponse {}

// <---------------------->
//         Tokens
// <---------------------->

message CreateTokenRequest {
  repeated string policies = 1;
  string ttl = 2;
}

message CreateTokenResponse {
  string token = 1;
}

message GetTokenRequest {
  string accessor = 1;
}

message GetTokenResponse {
  string accessor = 1;
  repeated string policies = 2;
  string ttl = 3;
}

message ListTokensRequest {

}

message ListTokensResponse {
  message Token {
    string accessor = 1;
    repeated string policies = 2;
    string ttl = 3;
  }
  repeated Token tokens = 1;
}

message RevokeTokenRequest {
  string accessor = 1;
}

message RevokeTokenResponse {

}
